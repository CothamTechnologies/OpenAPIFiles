swagger: '2.0'
info:
  version: '2.0'
  title: 'Google Firestore Def for Demo Books App'
  description: ''
host: firestore.googleapis.com
basePath: /v1/projects
schemes: 
  - https


paths:

  /{projectID}/databases/(default)/documents/{collectionId}/{userId}/{subcollectionId}:
    get:
      summary: list users books
      description: list users books
      tags: 
        - documents
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: bearer token
          type: string
        - in: path
          name: projectID
          description: firebase app project projectID
          type: string
          required: true
        - in: path
          name: collectionId
          type: string
          required: true
        - in: path
          name: userId
          type: string
          required: true
        - in: path
          name: subcollectionId
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              documents: 
                type: array
                items: 
                  type: object
                  properties: 
                    name: 
                      type: string
                    fields: 
                      type: object
                      properties: 
                        status: 
                          type: object
                          properties: 
                            stringValue: 
                              type: string
                        title: 
                          type: object
                          properties: 
                            stringValue: 
                              type: string
                    createTime: 
                      type: string
                    updateTime: 
                      type: string
        default:
          description: unexpected response  


  /{projectID}/databases/(default)/documents:runQuery:
    post:
      summary: run Query on Collection
      description: run Query on Collection
      tags: 
        - documents
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: bearer token
          type: string
        - in: path
          name: projectID
          description: firebase app project projectID
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              structuredQuery:
                type: object
                properties:
                  where:
                    type: object
                    properties:
                      fieldFilter:
                        type: object
                        properties:
                          field:
                            type: object
                            properties:
                              fieldPath:
                                type: string
                          op:
                            type: string
                          value:
                            type: object
                            properties:
                              stringValue:
                                type: string
                  from:
                    type: array
                    items:
                      type: object
                      properties:
                        collectionId:
                          type: string
                    
      responses:
        '200':
          description: OK

  /{projectID}/databases/(default)/documents/{collectionId}:
    post:
      summary: create entry in collection
      description: create entry in collection
      tags: 
        - documents
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: bearer token
          type: string
        - in: path
          name: projectID
          description: firebase app project projectID
          type: string
          required: true
        - in: path
          name: collectionId
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              fields:
                type: object
                properties:
                  userid:
                    type: object
                    properties:
                      stringValue:
                        type: string
                  bookname:
                    type: object
                    properties:
                      stringValue:
                        type: string
      responses:
        '200':
          description: OK
    
    get:
      summary: list entries in collection
      description: list entries in collection
      tags: 
        - documents
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: bearer token
          type: string
        - in: path
          name: projectID
          description: firebase app project projectID
          type: string
          required: true
        - in: path
          name: collectionId
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              documents:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    fields:
                      type: object
                      properties:
                        bookname:
                          type: object
                          properties:
                            stringValue:
                              type: string
                        userid:
                          type: object
                          properties:
                            stringValue:
                              type: string
                    createTime:
                      type: string
                    updateTime:
                      type: string