swagger: "2.0"
info:
  description: Cumulocity REST API for FloPro Integration. This API has been converted from the official Cumulocity Postman Collection.
    https://cumulocity.com/guides/reference/rest-implementation/
  version: "0.1"
  title: Cumulocity REST API
host: cotham.eu-latest.cumulocity.com

schemes:
- https
security:
- auth: []
paths:
  /alarm:
    get:
      tags:
      - Cumulocity API Overview
      - Alarms
      summary: Get the AlarmAPI resource
      description: >-
        #### For a detailed description of the API please check out the [Alarm
        Reference Guide](http://cumulocity.com/guides/reference/alarms/)
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AlarmAPI'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /alarm/alarms:
    get:
      tags:
      - Alarms
      summary: Get an alarm collection
      description: >-
        #### For a detailed description of the API please check out the [Alarm
        Reference Guide](http://cumulocity.com/guides/reference/alarms/)
      produces:
      - application/json
      parameters:
        - in: query
          name: pageSize
          description: Default 5, Max 2000
          type: integer
        - in: query
          name: currentPage
          type: integer
        - in: query
          name: withTotalPages
          type: boolean
        - in: query
          name: dateFrom
          description: example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
          type: string
        - in: query
          name: dateTo
          description: example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
          type: string
        - in: query
          name: status
          description: status={status}
          type: string
        - in: query
          name: resolved
          description: resolved={resolved}
          type: string
        - in: query
          name: severity
          description: severity={severity}
          type: string
        - in: query
          name: source
          description: source={source}
          type: string
        - in: query
          name: withAssets
          description: withAssets={withAssets}
          type: string
        - in: query
          name: withDevices
          description: withDevices={withDevices}
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AlarmCollection'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    post:
      tags:
      - Alarms
      summary: Create a new Alarm
      description: >-
        #### For a detailed description of the API please check out the [Alarm
        Reference Guide](http://cumulocity.com/guides/reference/alarms/)
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Alarm
        description: The Alarm to create
        required: true
        schema:
          type: object
          properties:
            type:
              type: string
            time:
              type: string
            text:
              type: string
            source:
                type: object
                properties:
                  self:
                    type: string
                  id:
                    type: string
            status:
              type: string
            severity:
              type: string
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Alarm'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    put:
      tags:
      - Alarms
      summary: Bulk update of alarm collection
      description: >-
        #### For a detailed description of the API please check out the [Alarm
        Reference Guide](http://cumulocity.com/guides/reference/alarms/)
        
        The PUT method allows for updating alarms collections. Currently only the status of alarms can be changed.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: status
        description: Comma separated alarm statuses, for example ACTIVE,CLEARED.
        type: string
      - in: query
        name: source
        description: Source device id.
        type: string
      - in: query
        name: resolved
        description: When set to true only resolved alarms will be updated (the one with status CLEARED), false means alarms with status ACTIVE or ACKNOWLEDGED.
        type: boolean
      - in: query
        name: severity
        description: Alarm severity, for example MINOR.
        type: string
      - in: query
        name: dateFrom
        description: Start date or date and time of alarm occurrence. Example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
        type: string
      - in: query
        name: dateTo
        description: End date or date and time of alarm occurrence. Example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
        type: string
      - in: body
        name: Status
        description: The status to update
        required: true
        schema:
          type: object
          properties:
            status:
              type: string
      responses:
        200:
          description: Updated
        202:
          description: Process continuing in background
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    delete:
      tags:
      - Alarms
      summary: Delete an alarm collection
      description: >-
        #### For a detailed description of the API please check out the [Alarm
        Reference Guide](http://cumulocity.com/guides/reference/alarms/)
        
        Important: Note that it is possible to call this endpoint without providing any parameter - it will result in deleting all alarms and it is not recommended.
      produces:
      - application/json
      parameters:
        - in: query
          name: status
          description: Comma separated alarm statuses, for example ACTIVE,CLEARED.
          type: string
        - in: query
          name: source
          description: Source device id.
          type: string
        - in: query
          name: withSourceAssets
          description: When set to true also alarms for related source assets will be removed. When this parameter is provided also source must be defined.
          type: boolean
        - in: query
          name: withSourceDevices
          description: When set to true also alarms for related source devices will be removed. When this parameter is provided also source must be defined.
          type: boolean
        - in: query
          name: resolved
          description: When set to true only resolved alarms will be removed (the one with status CLEARED), false means alarms with status ACTIVE or ACKNOWLEDGED.
          type: boolean
        - in: query
          name: severity
          description: Alarm severity, for example MINOR.
          type: string
        - in: query
          name: dateFrom
          description: Start date or date and time of alarm occurrence. Example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
          type: string
        - in: query
          name: dateTo
          description: End date or date and time of alarm occurrence. Example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
          type: string
        - in: query
          name: type
          description: Alarm type.
          type: string
      responses:
        204:
          description: No content
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /alarm/alarms/{alarmId}:
    get:
      tags:
      - Alarms
      summary: Get an Alarm 
      description: >-
        #### For a detailed description of the API please check out the [Alarm
        Reference Guide](http://cumulocity.com/guides/reference/alarms/)
      produces:
      - application/json
      parameters:
        - in: path
          name: alarmId
          description: Alarm id.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Alarm'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    put:
      tags:
      - Alarms
      summary: Update an Alarm
      description: >-
        #### For a detailed description of the API please check out the [Alarm
        Reference Guide](http://cumulocity.com/guides/reference/alarms/)
        
        Only text, status, severity and custom properties can be modified. Non-modifiable fields will be ignored when provided in request.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: alarmId
        description: Alarm id.
        required: true
        type: string
      - in: body
        name: Alarm
        description: The alarm properties to update
        required: true
        schema:
          type: object
          properties:
            text:
              type: string
            status:
              type: string
            severity:
              type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Alarm'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /application:
    get:
      tags:
      - Applications
      - Cumulocity API Overview
      summary: Get the ApplicationAPI resource
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ApplicationAPI'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /application/applications:
    get:
      tags:
      - Applications
      summary: Get an application collection
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ApplicationCollection'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    post:
      tags:
      - Applications
      summary: Create a new application
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Application
        description: The Application to create
        required: true
        schema:
          type: object
          properties:
            key:
              type: string
              description: Shared secret of application
            name:
              type: string
              description: Name of application
            type:
              type: string
              description: Type of application. Possible values are EXTERNAL, HOSTED, MICROSERVICE
            contextPath:
              type: string
              description: contextPath of the hosted application
            resourcesUrl:
              type: string
              description: URL to application base directory hosted on an external server (Mandatory when application type is HOSTED)
            externalUrl:
              type: string
              description: URL to the external application (Mandatory when application type is EXTERNAL)
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /application/applications/{applicationId}/clone:
    post:
      tags:
      - Applications
      summary: Copy an application
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
        
        The properties are copied to the newly created application. For name, key and context path a “clone” prefix is added in order to be unique.
        
        If the target application is hosted and has an active version, the new application will have the active version with the same content.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: applicationId
        description: The id of the application which will be cloned
        required: true
        type: string
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /application/applications/{applicationId}:
    put:
      tags:
      - Applications
      summary: Update an application
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: applicationId
        description: Application id.
        required: true
        type: string
      - in: body
        name: Application
        description: The application properties to update
        required: true
        schema:
          type: object
          properties:
            key:
              type: string
              description: Shared secret of application
            name:
              type: string
              description: Name of application
            contextPath:
              type: string
              description: contextPath of the hosted application
            resourcesUrl:
              type: string
              description: URL to application base directory hosted on an external server (Mandatory when application type is HOSTED)
            externalUrl:
              type: string
              description: URL to the external application (Mandatory when application type is EXTERNAL)
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    get:
      tags:
      - Applications
      summary: Get an application 
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
      produces:
      - application/json
      parameters:
        - in: path
          name: applicationId
          description: Application id.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    delete:
      tags:
      - Applications
      summary: Delete an application 
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
      produces:
      - application/json
      parameters:
        - in: path
          name: applicationId
          description: Application id.
          required: true
          type: string
      responses:
        204:
          description: No content
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /application/applications/{microservice-applicationId}/bootstrapUser:
    get:
      tags:
      - Applications
      summary: Get bootstrap user
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
      produces:
      - application/json
      parameters:
        - in: path
          name: microservice-applicationId
          description: Microservice application id.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ApplicationUser'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /application/currentApplication:
    get:
      tags:
      - Applications
      summary: Get current application 
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
        
        Required authentication with bootstrap user
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    put:
      tags:
      - Applications
      summary: Update current application
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
        
        Required authentication with bootstrap user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Application
        description: The application properties to update
        required: true
        schema:
          type: object
          properties:
            availability:
              type: string
            id:
              type: string
            key:
              type: string
              description: Shared secret of application
            name:
              type: string
              description: Name of application
            owner:
              type: object
              properties:
                self:
                  type: string
                tenant:
                  type: object
                  properties:
                    id:
                      type: string
            self:
              type: string
            type:
              type: string
            contextPath:
              type: string
              description: contextPath of the hosted application
            resourcesUrl:
              type: string
              description: URL to application base directory hosted on an external server (Mandatory when application type is HOSTED)
            externalUrl:
              type: string
              description: URL to the external application (Mandatory when application type is EXTERNAL)
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /application/currentApplication/subscriptions:
    get:
      tags:
      - Applications
      summary: Get current application subscriptions
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
        
        Required authentication with bootstrap user
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ApplicationSubscriptionCollection'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /application/applications/{applicationId}/binaries:
    post:
      tags:
      - Applications
      summary: Upload application binary
      description: >-
        #### For a detailed description of the API please check out the
        [Application Reference
        Guide](http://cumulocity.com/guides/reference/applications/)
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - in: path
        name: applicationId
        description: Application id
        required: true
        type: string
      - in: formData
        name: ApplicationZIP
        type: file
        description: The application folder to upload
        required: true
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Application'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /audit:
    get:
      tags:
      - Auditing
      - Cumulocity API Overview
      summary: Get the AuditAPI resource
      description: >-
        #### For a detailed description of the API please check out the
        [Auditing Reference
        Guide](http://cumulocity.com/guides/reference/auditing/)
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AuditAPI'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /audit/auditRecords:
    post:
      tags:
      - Auditing
      summary: Create a new audit record
      description: >-
        #### For a detailed description of the API please check out the
        [Auditing Reference
        Guide](http://cumulocity.com/guides/reference/auditing/)
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Audit Record
        description: The Audit Record to create
        required: true
        schema:
          type: object
          properties:
            type:
              type: string
              description: Identifies the type of this audit record
            time:
              type: string
              description: Time of the audit record
            text:
              type: string
              description: Text description of the audit record
            source:
              type: object
              description: An optional ManagedObject that the audit record originated from, as object containing properties “id” and “self”
              properties:
                id:
                  type: string
                self:
                  type: string
            user:
              type: string
              description: The user responsible for the audited action
            application:
              type: string
              description: The application used to carry out the audited action
            activity:
              type: string
              description: The activity that was carried out
            severity:
              type: string
              description: The severity of action. Can be critical, major, minor, warning or information
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/AuditRecord'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    get:
      tags:
      - Auditing
      summary: Get audit records
      description: >-
        #### For a detailed description of the API please check out the
        [Auditing Reference
        Guide](http://cumulocity.com/guides/reference/auditing/)
      produces:
      - application/json
      parameters:
        - in: query
          name: pageSize
          description: Default 5, Max 2000
          type: integer
        - in: query
          name: currentPage
          type: integer
        - in: query
          name: withTotalPages
          type: boolean
        - in: query
          name: dateFrom
          description: example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
          type: string
        - in: query
          name: dateTo
          description: example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
          type: string
        - in: query
          name: type
          description: type={type}
          type: string
        - in: query
          name: user
          description: user={user}
          type: string
        - in: query
          name: application
          description: application={application}
          type: string
        - in: query
          name: revert
          description: revert={revert}
          type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AuditRecordCollection'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
    delete:
      tags:
      - Auditing
      summary: Delete a collection of audit records
      description: >-
        #### For a detailed description of the API please check out the
        [Auditing Reference
        Guide](http://cumulocity.com/guides/reference/auditing/)
        
        Important: This method has been deprecated and will be removed completely with the July 2020 release (10.6.6). With Cumulocity IoT >= 10.6.6 the deletion of audit logs will no longer be permitted. All DELETE requests to the audit API will return the error 405 Method not allowed. Note that retention rules still apply to audit logs and will delete audit log records older than the specified retention time.
      produces:
      - application/json
      parameters:
        - in: query
          name: dateFrom
          description: example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
          type: string
        - in: query
          name: dateTo
          description: example formats 2019-04-20 or 2019-04-20T08:30:00.000Z
          type: string
        - in: query
          name: type
          description: type={type}
          type: string
        - in: query
          name: user
          description: user={user}
          type: string
        - in: query
          name: application
          description: application={application}
          type: string
      responses:
        204:
          description: No content
        405:
          description: Not allowed
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
  /audit/auditRecords/{recordId}:
    get:
      tags:
      - Auditing
      summary: Get an audit record
      description: >-
        #### For a detailed description of the API please check out the
        [Auditing Reference
        Guide](http://cumulocity.com/guides/reference/auditing/)
      produces:
      - application/json
      parameters:
        - in: path
          name: recordId
          description: Record id
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AuditRecord'
        default:
          description: Other Error
          schema:
            $ref: '#/definitions/GenericError'
securityDefinitions:
  auth:
    type: basic
definitions:
  GenericError:
    type: object
    properties:
      error:
        type: string
      info:
        type: string
      message:
        type: string
  AlarmAPI:
    type: object
    properties:
      self:
        type: string
      alarms:
        type: string
      alarmsForStatus:
        type: string
      alarmsForSource:
        type: string
      alarmsForSourceAndStatus:
        type: string
      alarmsForTime:
        type: string
      alarmsForStatusAndTime:
        type: string
      alarmsForSourceAndTime:
        type: string
      alarmsForSourceAndStatusAndTime:
        type: string
      alarmsForSourceWithAssetsAndWithDevices:
        type: string
      alarmsForSeverity:
        type: string
      alarmsForResolved:
        type: string
  Alarm:
    type: object
    properties:
      self:
        type: integer
      id:
        type: string
      time:
        type: string
      type:
        type: string
      creationTime:
        type: integer
      text:
        type: string
      status:
        type: string
      severity:
        type: string
      count:
        type: integer
      firstOccurrenceTime:
        type: string
      source:
        $ref: '#/definitions/ManagedObject'
  AlarmCollection:
    type: object
    properties:
      next:
        type: string
      prev:
        type: string
      self:
        type: integer
      statistics:
        $ref: '#/definitions/PagingStatistics'
      alarms:
        type: array
        items:
          $ref: '#/definitions/Alarm'
  ApplicationAPI:
    type: object
    properties:
      self:
        type: string
      applicationById:
        type: string
      applications:
        type: string
      applicationsByName:
        type: string
      applicationsByTenant:
        type: string
      applicationsByOwner:
        type: string
  Application:
    type: object
    properties:
      self:
        type: string
      id:
        type: string
      name:
        type: string
      key:
        type: string
      type:
        type: string
      availability:
        type: string
      owner:
        $ref: '#/definitions/TenantReference'
      contextPath:
        type: string
      resourcesUrl:
        type: string
      resourcesUsername:
        type: string
      resourcesPassword:
        type: string
      externalUrl:
        type: string
  ApplicationCollection:
    type: object
    properties:
      self:
        type: string
      applications:
        type: array
        items:
          $ref: '#/definitions/Application'
      statistics:
        $ref: '#/definitions/PagingStatistics'
      prev:
        type: string
      next:
        type: string
  ApplicationSubscriptionCollection:
    type: object
    properties:
      self:
        type: string
      users:
        type: array
        items:
          $ref: '#/definitions/ApplicationUser'
      statistics:
        $ref: '#/definitions/PagingStatistics'
      prev:
        type: string
      next:
        type: string
  ApplicationUser:
    type: object
    properties:
      tenant:
        type: string
      name:
        type: string
      password:
        type: string
  AuditAPI:
    type: object
    properties:
      self:
        type: string
      auditRecords:
        type: string
      auditRecordsForType:
        type: string
      auditRecordsForUser:
        type: string
      auditRecordsForApplication:
        type: string
      auditRecordsForUserAndType:
        type: string
      auditRecordsForUserAndApplication:
        type: string
      auditRecordsForTypeAndApplication:
        type: string
      auditRecordsForTypeAndUserAndApplication:
        type: string
  AuditRecord:
    type: object
    properties:
      id:
        type: string
      self:
        type: string
      creationTime:
        type: string
      type:
        type: string
      time:
        type: string
      text:
        type: string
      source:
        $ref: '#/definitions/ManagedObject'
      user:
        type: string
      application:
        type: string
      activity:
        type: string
      severity:
        type: string
      changes:
        type: array
        items:
          type: string
  AuditRecordCollection:
    type: object
    properties:
      self:
        type: string
      auditRecords:
        type: array
        items:
          $ref: '#/definitions/AuditRecord'
      statistics:
        $ref: '#/definitions/PagingStatistics'
      prev:
        type: string
      next:
        type: string
  TenantReference:
    type: object
    properties:
      self:
        type: string
      tenant:
        $ref: '#/definitions/Tenant'
  Tenant:
    type: object
    properties:
      id:
        type: string
  ManagedObject:
    type: object
    properties:
      self:
        type: string
      id:
        type: integer
  PagingStatistics:
    type: object
    properties:
      totalPages:
        type: integer
      currentPage:
        type: integer
      pageSize:
        type: integer