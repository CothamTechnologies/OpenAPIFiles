swagger: "2.0"
info:
  version: "0.1"
  title: "api From Stack api-playground Environment test"
  description: "Simple API for photo album tutorial"

host: "ncb1h8twvl.execute-api.eu-west-2.amazonaws.com"
basePath: "/test"

schemes:
  - "https"
paths:
  /login:
    post:
      summary: Login
      description: Allows user to login
      tags:
        - 0. User management
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - in: formData
          name: userName
          type: string
          description: userName
          required: true
        - in: formData
          name: password
          type: string
          description: password
          required: true

      responses:
        200:
          description: "200 response"
          schema:
            type: object
            properties:
              token:
                type: string

        default:
          description: "error object"
          schema:
            type: object
            properties:
              message:
                type: string

  /photos:
    get:
      summary: Get photos
      description: Gets a list of photos for this user
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          type: string
      responses:
        200:
          description: "200 response"
          schema:
            type: object
            properties:
              count:
                type: string
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    imageTitle:
                      type: string

        default:
          description: "error object"
          schema:
            type: object
            properties:
              message:
                type: string

    post:
      summary: Submit image
      description: Allows user to submit an image
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          type: string
        - in: formData
          name: imageTitle
          description: "Title of the image"
          type: string
        - in: formData
          name: imageData
          description: "BASE64 encoded string of the image"
          type: string
      responses:
        200:
          description: "200 response"
          schema:
            type: object
            properties:
              message:
                type: string
              id:
                type: string

        default:
          description: "error object"
          schema:
            type: object
            properties:
              message:
                type: string

  /photos/{id}:
    get:
      summary: Get a photo
      description: Gets a specific photo with a certain ID
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          type: string
        - in: path
          name: id
          type: string
          description: id of image to retrieve
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            type: object
            properties:
              imageData:
                type: string

        default:
          description: "error object"
          schema:
            type: object
            properties:
              message:
                type: string

  /users:
    post:
      summary: New user
      description: Creates a new user account
      parameters:
        - in: formData
          name: userName
          type: string
          description: User name for this user
          required: true
        - in: formData
          name: userEmail
          type: string
          description: Email address for this user
          required: true
        - in: formData
          name: password
          description: The new user's password
          type: string
          required: true
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            type: object
            properties:
              message:
                type: string
              id:
                type: string

        default:
          description: "error object"
          schema:
            type: object
            properties:
              message:
                type: string

  /users/{id}:
    put:
      parameters:
        - in: header
          name: Authorization
          description: Bearer token
          type: string
        - in: body
          name: user
          description: The user to create.
          schema:
            type: object
            properties:
              newPassword1:
                type: string
              newPassword2:
                type: string
              password:
                type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            type: object
            properties:
              message:
                type: string

        default:
          description: "error object"
          schema:
            type: object
            properties:
              message:
                type: string
